#!/bin/bash -e
#
# S2I assemble script for the 'golang-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
	# If the 'golang-s2i' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/local/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  cp -Rf /opt/go/destination/artifacts/* $GOPATH/
  rm -rf /opt/go/destination/artifacts
  cd $GOPATH/src
  go get -u -v
fi


echo "---> Building application from source..."
#The go get command will download all dependencies and create the binary for us.
#Unfortunately it takes the name of the directory from which the source was compiled.
#No matter, a simple mv command allows us to rename it.
cd $GOPATH/destination/src
go get -v .
cd $GOBIN
mv src goexec
